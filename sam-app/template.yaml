AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "jarhc-online-app - JAR Health Check Online serverless application."

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Resources:

  #  ResourceGroup:
  #    Type: "AWS::ResourceGroups::Group"
  #    Properties:
  #      Name: "jarhc-online-resource-group"
  #      Description: "Resource group for jarhc-online-app"

  JapiccReportsBucket:
    Type: AWS::S3::Bucket # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
    Properties:
      AccessControl: PublicRead
    # CorsConfiguration: https://docs.aws.amazon.com/AmazonS3/latest/userguide/cors.html
    # LifecycleConfiguration: https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
    Metadata:
      DockerTag: go1.x-v1
      DockerContext: ./hello-world
      Dockerfile: Dockerfile

  JapiccCheckFunction:
    Type: AWS::Serverless::Function # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      # max price per execution:
      # MemorySize * Timeout / 1024 * $0.0000166667 = $0.001000002
      MemorySize: 1024 # increase memory size to 1 GB for JAPICC
      Timeout: 60 # increase timeout to 60 seconds for JAPICC
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /japicc/check
            Method: POST
      Environment:
        Variables:
          PARAM1: VALUE # TODO: pass bucket region and name to function
    Metadata:
      DockerTag: go1.x-v1
      DockerContext: ./japicc-check
      Dockerfile: Dockerfile

  JapiccReportsBucketPolicy:
    Type: AWS::S3::BucketPolicy # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html
    Properties:
      Bucket: !Ref JapiccReportsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadAccessForEveryone # grant read access to everyone
            Resource: !Sub "arn:aws:s3:::${JapiccReportsBucket}/*"
            Effect: Allow
            Action:
              - 's3:GetObject'
            Principal: '*'
          - Sid: ReadWriteAccessForJapiccCheckFunctionRole # grant read and write access to JapiccCheck function
            Resource: !Sub "arn:aws:s3:::${JapiccReportsBucket}/*"
            Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Principal:
              AWS: !GetAtt JapiccCheckFunctionRole.Arn

Outputs:
  ApiGatewayUrl:
    Description: "Base URL of API Gateway."
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  JapiccReportsBucketUrl:
    Description: "Public URL of S3 Bucket for JAPICC reports."
    Value: !GetAtt JapiccReportsBucket.RegionalDomainName # !Sub "https://${JapiccReportsBucket::RegionalDomainName}/"
