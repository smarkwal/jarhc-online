AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cognito User Pool for public website and API gateway.

Parameters:

  CognitoDomain:
    Description: DNS name of Cognito sign-up and sign-in webpages.
    Type: String
    Default: login.jarhc.org

  CognitoCertificateARN:
    Description: ARN of SSL certificate in us-east-1 required for Cognito
    Type: String
    # see region "us-east-1", CloudFormation stack "jarhc-online-cert", output "CognitoCertificateARN"
    Default: arn:aws:acm:us-east-1:837783538267:certificate/26192609-2067-455f-b1c3-f67b75b15926

  EmailARN:
    Description: ARN of a verified email address in Amazon SES (eu-west-1, us-east-1, or us-west-2)
    Type: String
    Default: arn:aws:ses:eu-west-1:837783538267:identity/do-not-reply@jarhc.org

  DnsZoneID:
    Description: ID of hosted DNS zone
    Type: String
    Default: Z39VOOPW73P7H0

Resources:

  # Cognito user pool
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: online.jarhc.org
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      MfaConfiguration: OPTIONAL
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
      EmailConfiguration:
        EmailSendingAccount: DEVELOPER
        SourceArn: !Ref EmailARN
        From: "JarHC <do-not-reply@jarhc.org>"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        UnusedAccountValidityDays: 7
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1

  # Cognito user group "Administrators"
  CognitoAdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref CognitoUserPool
      GroupName: "Administrators"
      Precedence: 0

  # Cognito custom domain
  CognitoCustomDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref CognitoUserPool
      Domain: !Ref CognitoDomain
      CustomDomainConfig:
        CertificateArn: !Ref CognitoCertificateARN

  # DNS record for Cognito custom domain
  CognitoDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref DnsZoneID
      Name: !Ref CognitoDomain
      Type: A
      AliasTarget:
        # TODO: how to get the DNS name for CloudFront distribution created for Cognito?
        DNSName: d1h9aibn2whqxe.cloudfront.net
        HostedZoneId: Z2FDTNDATAQYW2
        EvaluateTargetHealth: false

  # Cognito app client used by public website and API gateway
  CognitoAppClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: online.jarhc.org
      GenerateSecret: true
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - openid
        - profile
        - email
        - phone
      DefaultRedirectURI: https://online.jarhc.org/login.html
      CallbackURLs:
        - https://online.jarhc.org/login.html
        - http://localhost:3000/login.html
      LogoutURLs:
        - https://online.jarhc.org/logout.html
        - http://localhost:3000/logout.html
      IdTokenValidity: 3 # hours
      AccessTokenValidity: 3 # hours
      RefreshTokenValidity: 7 # days
      EnableTokenRevocation: true
      PreventUserExistenceErrors: ENABLED
      SupportedIdentityProviders:
        - COGNITO
      WriteAttributes:
        - name

Outputs:

  CognitoUserPoolID:
    Description: "Cognito User Pool ID"
    Value: !Ref CognitoUserPool

  CognitoUserPoolProviderURL:
    Description: "Cognito User Pool Provider URL"
    Value: !GetAtt CognitoUserPool.ProviderURL

  CognitoAppClientID:
    Description: "Cognito App Client ID"
    Value: !Ref CognitoAppClient
