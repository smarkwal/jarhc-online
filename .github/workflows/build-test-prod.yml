name: Build test-prod

on:
  push:
    paths:
      - 'test-prod/**'
      - '.github/workflows/build-test-prod.yml'
  workflow_dispatch:
    inputs:
      additionalGradleOptions:
        description: 'Additional Gradle options'
        required: false
        default: ''

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-central-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      JARHC_COGNITO_CLIENT_ID: ${{ secrets.JARHC_COGNITO_CLIENT_ID }}
      JARHC_COGNITO_CLIENT_SECRET: ${{ secrets.JARHC_COGNITO_CLIENT_SECRET }}
      JARHC_COGNITO_USERNAME: ${{ secrets.JARHC_COGNITO_USERNAME }}
      JARHC_COGNITO_PASSWORD: ${{ secrets.JARHC_COGNITO_PASSWORD }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      PUSH_GRADLE_OPTIONS: ''

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 11 and 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: |
          11
          17

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v2

    - name: Restore Sonar Cache
      uses: actions/cache@v4
      if: ${{ github.event_name == 'push' && !startsWith(github.ref_name, 'dependabot/') }}
      with:
        path: /home/runner/.sonar/cache
        key: sonar-cache

    # TODO: support SonarQube scan
    #- name: Set Push Gradle options
    #  if: ${{ github.event_name == 'push' && !startsWith(github.ref_name, 'dependabot/') }}
    #  run: echo "PUSH_GRADLE_OPTIONS=sonar" >> $GITHUB_ENV

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v3
      with:
        build-root-directory: test-prod
        arguments: '--no-daemon build ${{ env.PUSH_GRADLE_OPTIONS }} ${{ github.event.inputs.additionalGradleOptions }}'
        cache-read-only: false
